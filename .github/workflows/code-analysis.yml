name: Code Analysis

on:
  push:
      branches: [ "main" ]
  pull_request:
      branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:

    analyze:

      name: Analyze (${{ matrix.language }}) vulnerabilities

      runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
      permissions:
        security-events: write
        packages: read
        actions: read
        contents: read

      strategy:
        fail-fast: false
        matrix:
          include:
          - language: actions
            build-mode: none
          - language: python
            build-mode: none
          
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          
      - if: matrix.build-mode == 'manual'
        shell: bash
        run: |
          echo '  make bootstrap'
          echo '  make release'
          exit 1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

    run-lint:

      name: Lint python codebase

      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            # Full git history is needed to get a proper list of changed files within `super-linter`
            fetch-depth: 0
  
        - name: Lint Code Base
          uses: github/super-linter@v4
          env:
            VALIDATE_ALL_CODEBASE: false
            DEFAULT_BRANCH: "main"
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


